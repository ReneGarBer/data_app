name: DBT test and merge

on:
  push:
    branches:
      - '!main'
      - 'dbt_app/**'
      - '!extract_app/**'

    paths:
      - '!.github/**'
      - '!apps/extract_app/**'
      - '!environments/dev/extract_app/**'
      - 'apps/dbt_app/**'

jobs:
  code_test:
    name: Code test
    runs-on: ubuntu-latest
    outputs:
      not_failures: ${{steps.run_tests.outputs.not_failures}}
    environment: development
    env:
      DBT_ENV_SECRET_DATABASE: ${{ secrets.PGDATABASE }}
      DBT_ENV_SECRET_HOST: ${{ secrets.PGHOST }}
      DBT_PORT: ${{ secrets.PGPORT }}
      DBT_ENV_SECRET_USERSTG: ${{ secrets.PGUSERSTG }}
      PDBT_ENV_SECRET_PASSWORDSTG: ${{ secrets.PGPASSWORDSTG }}
      DBT_ENV_SECRET_USERRFND: ${{ secrets.PGUSERRFND }}
      PDBT_ENV_SECRET_PASSWORDRFND: ${{ secrets.PGPASSWORDRFND }}
      DBT_ENV_SECRET_USERANLST: ${{ secrets.PGUSERANLST }}
      PDBT_ENV_SECRET_PASSWORDANLST: ${{ secrets.PGPASSWORDANLST }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Change to your project's Python version

      - name: Install dependencies
        working-directory: apps/dbt_app/
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests and capture output
        id: run_tests
        working-directory: apps/dbt_app/tests/    
        run: |
          pwd
          ls -ltr
          chmod +x tests.sh
          . tests.sh

      - name: Send email with test results
        if: steps.run_tests.outputs.not_failures == 'false'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚ùå Pytest Failures for Commit ${{ github.sha }}"
          to: renegarciabernal.rg@gmail.com #replace with team emails
          from: GitHub CI Bot <${{ secrets.EMAIL_USERNAME }}>
          body: |
            Hello,

            Here are the test results from GitHub Actions:

            ${{ steps.run_tests.outputs.test_output }}

  create_and_merge_pr:
    name: Create and auto-merge PR to main if tests pass
    needs: code_test
    if: needs.code_test.outputs.not_failures == 'true'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_PUSH_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PUSH_TOKEN }}
          path: apps/dbt_app/src/
  
      - name: Create Pull Request
        run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          gh pr create --title "Auto PR" --body "Created by workflow" --base main --head "$BRANCH" || echo "PR may already exist"
  
      - name: Get PR URL
        id: pr
        run: |
          PR_URL=$(gh pr list --head "$(git rev-parse --abbrev-ref HEAD)" --json url -q '.[0].url')
          echo "pr_url=$PR_URL" >> "$GITHUB_OUTPUT"
  
      - name: Enable auto-merge
        if: steps.pr.outputs.pr_url != ''
        run: |
          gh pr merge "$PR_URL" --merge --auto || echo "Failed to enable auto-merge"
